#!/bin/bash

current_dir=`pwd`

# install homebrew
if [ -z "$(which brew)" ]; then
  curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# install basic programs
programs=(
  bat
  eza
  fd
  fish
  fzf
  gh
  git
  git-delta
  hub
  lua-language-server
  mise
  neovim
  procs
  ripgrep
  terminal-notifier
  tig
  tokei
  tree
  tmux
  wget
)
for program in ${programs[@]}; do
  if [ -z "$(brew list --formula | grep $program)" ]; then
    brew install $program

    if [ "$program" == "fzf" ]; then
      /opt/homebrew/opt/fzf/install
    fi
  fi
done

# change to fish shell
if [ "$SHELL" != "/opt/homebrew/bin/fish" ]; then
  echo "/opt/homebrew/bin/fish" | sudo tee -a /etc/shells
  chsh -s /opt/homebrew/bin/fish
fi
# install fisherman
if [ ! -f ~/.config/fish/functions/fisher.fish ]; then
  curl -Lo ~/.config/fish/functions/fisher.fish --create-dirs git.io/fisher
fi
# copy fish config
ln -sf "$current_dir/config/fish/config.fish" ~/.config/fish/config.fish
ln -sf "$current_dir/config/fish/fish_plugins" ~/.config/fish/fish_plugins
for file in $(ls config/fish/functions); do
  ln -sf "$current_dir/config/fish/functions/$file" ~/.config/fish/functions/$file_name
done

# neovim
mkdir -p ~/.config/nvim
for file in $(ls "$current_dir/config/nvim"); do
  ln -sfh "$current_dir/config/nvim/$file" ~/.config/nvim
done

# karabiner elements custom modifications
mkdir -p ~/.config/karabiner/assets/complex_modifications
for file in $(ls "$current_dir/config/karabiner/complex_modifications"); do
  ln -sfh "$current_dir/config/karabiner/complex_modifications/$file" ~/.config/karabiner/assets/complex_modifications
done

# tmux
if [ ! -d ~/.tmux/plugins/tpm ]; then
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
fi

# copy dot files to home dir
for file in \.*; do
  # skip .git, . and ..
  if [[ "${file}" != '.git' && "${file}" != '.gitignore' && "${file}" != '.' && "${file}" != '..' && "${file}" != '.config' ]]; then
    ln -sfh "$current_dir/$file" ~/$file
  fi
done
for file in $(ls "$current_dir/.config"); do
  ln -sfh "$current_dir/.config/$file" ~/.config/$file
done

mkdir -p ~/bin
for file in bin/*; do
  file_name=$(echo -n $file | sed "s#bin/##")
  ln -sf "$current_dir/$file" ~/bin/$file_name
done
